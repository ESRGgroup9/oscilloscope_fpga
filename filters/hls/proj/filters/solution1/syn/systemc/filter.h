// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _filter_HH_
#define _filter_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "filter_mul_mul_16bkb.h"
#include "filter_mac_muladdcud.h"
#include "filter_x_ant.h"
#include "filter_x_coefs.h"

namespace ap_rtl {

struct filter : public sc_module {
    // Port declarations 8
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<16> > x;
    sc_out< sc_lv<16> > ap_return;


    // Module declarations
    filter(sc_module_name name);
    SC_HAS_PROCESS(filter);

    ~filter();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    filter_x_ant* x_ant_U;
    filter_x_coefs* x_coefs_U;
    filter_mul_mul_16bkb<1,1,16,12,28>* filter_mul_mul_16bkb_U1;
    filter_mac_muladdcud<1,1,10,16,16,16>* filter_mac_muladdcud_U2;
    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<5> > x_ant_address0;
    sc_signal< sc_logic > x_ant_ce0;
    sc_signal< sc_logic > x_ant_we0;
    sc_signal< sc_lv<16> > x_ant_d0;
    sc_signal< sc_lv<16> > x_ant_q0;
    sc_signal< sc_lv<5> > x_coefs_address0;
    sc_signal< sc_logic > x_coefs_ce0;
    sc_signal< sc_lv<12> > x_coefs_q0;
    sc_signal< sc_lv<5> > add_ln23_fu_98_p2;
    sc_signal< sc_lv<5> > add_ln23_reg_166;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<64> > zext_ln23_1_fu_109_p1;
    sc_signal< sc_lv<64> > zext_ln23_1_reg_176;
    sc_signal< sc_lv<1> > icmp_ln27_fu_114_p2;
    sc_signal< sc_lv<1> > icmp_ln27_reg_186;
    sc_signal< sc_lv<16> > x_ant_load_reg_190;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<12> > x_coefs_load_reg_195;
    sc_signal< sc_lv<28> > mul_ln25_fu_148_p2;
    sc_signal< sc_lv<28> > mul_ln25_reg_200;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<32> > y_fu_129_p2;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<16> > add_ln32_fu_142_p2;
    sc_signal< sc_lv<16> > add_ln32_reg_211;
    sc_signal< sc_lv<5> > i_0_reg_76;
    sc_signal< sc_lv<32> > y_0_reg_87;
    sc_signal< sc_lv<64> > zext_ln23_fu_104_p1;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<32> > zext_ln25_2_fu_126_p1;
    sc_signal< sc_lv<16> > trunc_ln25_1_fu_138_p1;
    sc_signal< sc_lv<16> > trunc_ln25_fu_135_p1;
    sc_signal< sc_lv<16> > mul_ln25_fu_148_p0;
    sc_signal< sc_lv<12> > mul_ln25_fu_148_p1;
    sc_signal< sc_lv<10> > grp_fu_154_p0;
    sc_signal< sc_lv<16> > grp_fu_154_p3;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    sc_signal< sc_lv<28> > mul_ln25_fu_148_p00;
    sc_signal< sc_lv<28> > mul_ln25_fu_148_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_fsm_state1;
    static const sc_lv<6> ap_ST_fsm_state2;
    static const sc_lv<6> ap_ST_fsm_state3;
    static const sc_lv<6> ap_ST_fsm_state4;
    static const sc_lv<6> ap_ST_fsm_state5;
    static const sc_lv<6> ap_ST_fsm_state6;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<5> ap_const_lv5_1C;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<5> ap_const_lv5_1F;
    static const sc_lv<16> ap_const_lv16_1DF;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln23_fu_98_p2();
    void thread_add_ln32_fu_142_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_grp_fu_154_p0();
    void thread_icmp_ln27_fu_114_p2();
    void thread_mul_ln25_fu_148_p0();
    void thread_mul_ln25_fu_148_p00();
    void thread_mul_ln25_fu_148_p1();
    void thread_mul_ln25_fu_148_p10();
    void thread_trunc_ln25_1_fu_138_p1();
    void thread_trunc_ln25_fu_135_p1();
    void thread_x_ant_address0();
    void thread_x_ant_ce0();
    void thread_x_ant_d0();
    void thread_x_ant_we0();
    void thread_x_coefs_address0();
    void thread_x_coefs_ce0();
    void thread_y_fu_129_p2();
    void thread_zext_ln23_1_fu_109_p1();
    void thread_zext_ln23_fu_104_p1();
    void thread_zext_ln25_2_fu_126_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
